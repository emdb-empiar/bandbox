[bandbox]
file_extensions = jpg|jpeg|mrc|mrcs
;file_cre = re.compile(rf"^([^.]*\.[^.]*|.*\.({${file_extensions}}))$", re.IGNORECASE)
;file_extension_capture_cre = re.compile(rf".*\.(?P<ext>({${file_extensions}}))$", re.IGNORECASE)
obvious_files = file|files|data|folder|inner_folder
;obvious_files_cre = re.compile(rf"^({${obvious_files}})$", re.IGNORECASE)
max_files = 2000
max_name_length = 50
# date_infix_chars must start with '-'
date_infix_chars = -:/.
month_chars = jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec|january|february|march|april|may|june|july|august|september|october|november|december
;date_re = [
;    # 12/31/2000 or 31/12/2000
;    rf"^.*\d{{2}}[{${date_infix_chars}}]*\d{{2}}[{${date_infix_chars}}]*\d{{4}}.*$",
;    # 2000[]12[]31 or 2000[]31[]12
;    rf"^.*\d{{4}}[{${date_infix_chars}}]*\d{{2}}[{${date_infix_chars}}]*\d{{2}}.*$",
;    # 31[]12[]00
;    rf"^.*\d{{2}}[{${date_infix_chars}}]*\d{{2}}[{${date_infix_chars}}]*\d{{2}}.*$",
;    # 31[]Dec[]2000
;    rf"^.*\d{{2}}[{${date_infix_chars}}]*({MONTH_CHARS})[{${date_infix_chars}}]*\d{{4}}.*$",
;    # Dec[]31[]2000
;    rf"^.*\d{{4}}[{${date_infix_chars}}]*({MONTH_CHARS})[{${date_infix_chars}}]*\d{{2}}.*$",
;]
;date_cre = list(map(lambda r: re.compile(r, re.IGNORECASE), ${date_re}))
accession_names = EMPIAR|EMDB
;accession_names_cre = re.compile(rf"^.*({${accession_names}}).*$", re.IGNORECASE)
odd_chars = &?! ,
;odd_chars_cre = re.compile(rf".*[{${odd_chars}}].*")
max_periods_in_name = 1
;max_periods_in_name_cre = re.compile(rf".*([.].*){{{${max_periods_in_name} + 1},}}.*")  # tricky!
external_refs = figure|supplementary
;external_refs_cre = re.compile(rf"^.*({${external_refs}}).*$", re.IGNORECASE)
