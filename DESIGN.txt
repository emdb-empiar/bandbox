who is the user?
- data creator
- data downloader

what does the user want to do?
- see the overall structure of the data e.g. tree, table [major]
- understand the experimental output e.g. treatments, controls, [desired]
- get a summary of the data e.g. #files, #folders [major]
- learn how to better structure it [desired]


quick wins
- detect long names [N2.d]
- detect cryptic names (against a dictionary) [N1]
- detect redundant dirs [S2.a]
- detect obvious folders e.g tiff/*.tif* [S2.b]
- detect system information [S2.c]
- detect excessive files per directory [S2.c]
- detect directories with mixed files [S3.a]
- detect external references e.g. 'figure' [N3.c]
- detect dates in names [N1.b]
- detect accessions e.g. 'EMPIAR' [N1.c]
- detect mixed case in names [N2.a]
- detect odd characters in names [N2.b]
- detect periods in names [N2.a]
- detect inconsistent names [N3.a]
- detect words to avoid e.g. 'files', 'data' [N3.c]
- detect missing padding [N3.e]
- detect embedded paths (needs file format library) [N3.f]
- detect unknown extensions [M1.a]
- detect proprietary extensions [M1.b]
- detect presence of documentation e.g. README [M2.a]
- detect presence of checksums [M3]
- detect hard links
- detect symbolic links
- detect broken symbolic links


resources
- dictionary
- file extensions
- file systems
- external reference words
- archive names
- odd characters???
- words to avoid
- documentation names
- checksum types and hashes
